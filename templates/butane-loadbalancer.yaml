# HAProxy documentation:
# https://cbonte.github.io/haproxy-dconv/2.5/configuration.html#5.3
variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - SSH_KEY
      groups:
        - wheel
systemd:
  units:
  - name: haproxy.service
    enabled: true
    contents: |
      [Unit]
      Description=HAProxy Load Balancer
      After=network-online.target wesher.service
      Wants=network-online.target wesher.service
      [Service]
      Type=simple
      Restart=on-failure
      RestartSec=5s
      ExecStartPre=-/bin/podman kill haproxy
      ExecStartPre=-/bin/podman rm haproxy
      ExecStartPre=/bin/podman pull docker.io/library/haproxy:lts-alpine
      ExecStart=/bin/podman run --name haproxy --security-opt label=disable --cap-add=NET_BIND_SERVICE --network=host -v /etc/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro docker.io/library/haproxy:lts-alpine
      [Install]
      WantedBy=multi-user.target
storage:
  directories:
    - path: /etc/haproxy
  files:
    - path: /etc/default/wesher
      mode: 0700
      user:
        id: 0
      group:
        id: 0
      contents:
        inline: |
          WESHER_INTERFACE="wgokd"
          WESHER_CLUSTER_KEY="WIREGUARD_CLUSTER_KEY"
          WESHER_CLUSTER_PORT="7946"
          WESHER_WIREGUARD_PORT="51820"
          WESHER_OVERLAY_NET="WIREGUARD_OVERLAY_CIDR"
    - path: /etc/haproxy/haproxy.cfg
      mode: 0444
      contents:
        inline: |
          global
            log         127.0.0.1 local2
            maxconn     4000
            daemon
          defaults
            mode                    http
            log                     global
            option                  dontlognull
            option http-server-close
            option                  redispatch
            retries                 3
            timeout http-request    10s
            timeout queue           1m
            timeout connect         10s
            timeout client          1m
            timeout server          1m
            timeout http-keep-alive 10s
            timeout check           10s
            maxconn                 3000
            default-server          init-addr last,resolvers,libc,none
          resolvers internal
            nameserver dns1 127.0.0.53:53
            parse-resolv-conf
            resolve_retries       999
            timeout resolve       1s
            timeout retry         1s
            hold other           30s
            hold refused         30s
            hold nx              30s
            hold timeout         30s
            hold valid           10s
            hold obsolete        30s
          frontend stats
            bind *:1936
            mode            http
            log             global
            maxconn 10
            stats enable
            stats hide-version
            stats refresh 30s
            stats show-node
            stats show-desc Stats for CLUSTER_NAME cluster 
            stats auth admin:HAPROXY_STATS_PASSWORD
            stats uri /stats
          listen api-server-6443 
            bind *:6443
            mode tcp
            server bootstrap bootstrap.OKD_DOMAIN:6443 check inter 1s backup 
            server CLUSTER_NAME-control0 control0.OKD_DOMAIN:6443 check inter 1s
            server CLUSTER_NAME-control1 control1.OKD_DOMAIN:6443 check inter 1s
            server CLUSTER_NAME-control2 control2.OKD_DOMAIN:6443 check inter 1s
          listen machine-config-server-22623 
            bind *:22623
            mode tcp
            server bootstrap bootstrap.OKD_DOMAIN:22623 check inter 1s backup 
            server CLUSTER_NAME-control0 control0.OKD_DOMAIN:22623 check inter 1s
            server CLUSTER_NAME-control1 control1.OKD_DOMAIN:22623 check inter 1s
            server CLUSTER_NAME-control2 control2.OKD_DOMAIN:22623 check inter 1s
          listen ingress-router-443 
            bind *:443
            mode tcp
            balance source
            server CLUSTER_NAME-worker0 worker0.OKD_DOMAIN:443 check inter 1s
            server CLUSTER_NAME-worker1 worker1.OKD_DOMAIN:443 check inter 1s
          listen ingress-router-80 
            bind *:80
            mode tcp
            balance source
            server CLUSTER_NAME-worker0 worker0.OKD_DOMAIN:80 check inter 1s
            server CLUSTER_NAME-worker1 worker1.OKD_DOMAIN:80 check inter 1s
          
